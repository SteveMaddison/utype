//
// Generated map data for 'level1'
// Dimensions: 551 x 24
//

#define REPEAT(x) 0xff, x
#define LEVEL1_MAP_WIDTH  551
#define LEVEL1_MAP_HEIGHT 24

const unsigned char level1_map[] PROGMEM = {
	0x00, REPEAT(23), // Column 0
	0x00, 0x00, 0x00, 0x01, 0x00, REPEAT(5), 0x01, 0x00, REPEAT(10), 0x02, 0x00, // Column 1
	0x00, REPEAT(9), 0x01, 0x00, REPEAT(12), // Column 2
	0x00, REPEAT(10), 0x01, 0x00, REPEAT(5), 0x03, 0x00, REPEAT(4), // Column 3
	0x00, REPEAT(23), // Column 4
	0x00, REPEAT(4), 0x02, 0x03, 0x00, REPEAT(16), // Column 5
	0x00, REPEAT(11), 0x01, 0x00, REPEAT(10), // Column 6
	0x00, REPEAT(17), 0x02, 0x00, REPEAT(4), // Column 7
	0x00, REPEAT(23), // Column 8
	0x00, REPEAT(14), 0x03, 0x00, REPEAT(7), // Column 9
	0x00, REPEAT(23), // Column 10
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, REPEAT(12), 0x01, 0x00, 0x00, // Column 11
	0x00, REPEAT(10), 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, REPEAT(7), // Column 12
	0x00, REPEAT(23), // Column 13
	REPEAT(1),
	0x00, REPEAT(3), 0x03, 0x00, REPEAT(13), 0x01, 0x00, REPEAT(3), // Column 15
	0x00, REPEAT(23), // Column 16
	REPEAT(1),
	0x00, 0x01, 0x00, REPEAT(21), // Column 18
	0x00, REPEAT(8), 0x02, 0x00, REPEAT(13), // Column 19
	0x00, REPEAT(23), // Column 20
	0x00, REPEAT(7), 0x03, 0x00, REPEAT(13), 0x08, // Column 21
	0x00, 0x00, 0x00, 0x03, 0x00, REPEAT(8), 0x01, 0x00, REPEAT(8), 0x1f, // Column 22
	0x00, REPEAT(4), 0x01, 0x00, REPEAT(9), 0x03, 0x00, REPEAT(5), 0x1f, // Column 23
	0x00, REPEAT(11), 0x01, 0x00, REPEAT(9), 0x1f, // Column 24
	0x00, REPEAT(22), 0x1f, // Column 25
	0x00, REPEAT(16), 0x02, 0x00, REPEAT(4), 0x1f, // Column 26
	0x00, 0x00, 0x00, 0x02, 0x00, REPEAT(15), 0x01, 0x00, 0x00, 0x1f, // Column 27
	0x00, REPEAT(22), 0x09, // Column 28
	0x00, REPEAT(23), // Column 29
	0x00, REPEAT(9), 0x01, 0x00, REPEAT(12), // Column 30
	0x00, REPEAT(19), 0x14, 0x1c, 0x00, 0x00, // Column 31
	0x00, REPEAT(5), 0x02, 0x00, REPEAT(12), 0x15, 0x1d, 0x04, 0x0c, // Column 32
	0x00, REPEAT(19), 0x15, 0x1d, 0x05, 0x0d, // Column 33
	0x00, 0x00, 0x01, 0x00, REPEAT(10), 0x03, 0x00, REPEAT(4), 0x15, 0x1d, 0x00, 0x00, // Column 34
	0x00, REPEAT(19), 0x15, 0x1d, 0x00, 0x00, // Column 35
	0x00, REPEAT(11), 0x01, 0x00, REPEAT(6), 0x15, 0x1d, 0x04, 0x0c, // Column 36
	0x00, REPEAT(13), 0x02, 0x00, REPEAT(4), 0x15, 0x1d, 0x05, 0x0d, // Column 37
	0x00, REPEAT(19), 0x15, 0x1d, 0x00, 0x00, // Column 38
	0x00, REPEAT(3), 0x02, 0x00, REPEAT(14), 0x15, 0x1d, 0x00, 0x00, // Column 39
	0x00, REPEAT(4), 0x03, 0x00, REPEAT(13), 0x15, 0x1d, 0x04, 0x0c, // Column 40
	0x00, REPEAT(19), 0x15, 0x1d, 0x05, 0x0d, // Column 41
	0x00, REPEAT(7), 0x01, 0x00, REPEAT(10), 0x16, 0x1e, 0x00, 0x08, // Column 42
	0x00, REPEAT(15), 0x01, 0x00, REPEAT(5), 0x1f, // Column 43
	0x00, 0x01, 0x00, REPEAT(9), 0x02, 0x00, REPEAT(9), 0x1f, // Column 44
	0x00, REPEAT(22), 0x1f, // Column 45
	0x00, REPEAT(21), 0x08, 0x17, // Column 46
	0x00, REPEAT(5), 0x01, 0x00, REPEAT(14), 0x1f, 0x1f, // Column 47
	0x00, 0x00, 0x02, 0x00, REPEAT(18), 0x1f, 0x1f, // Column 48
	0x00, REPEAT(9), 0x01, 0x00, 0x00, 0x03, 0x00, REPEAT(7), 0x1f, 0x1f, // Column 49
	0x00, REPEAT(18), 0x02, 0x00, 0x00, 0x09, 0x1f, // Column 50
	0x00, REPEAT(10), 0x03, 0x00, REPEAT(10), 0x1f, // Column 51
	0x00, REPEAT(3), 0x01, 0x00, REPEAT(16), 0x08, 0x0b, // Column 52
	0x00, REPEAT(21), 0x1f, 0x08, // Column 53
	0x00, REPEAT(17), 0x03, 0x00, 0x00, 0x00, 0x1f, 0x1f, // Column 54
	0x00, 0x00, 0x00, 0x01, 0x00, REPEAT(17), 0x1f, 0x1f, // Column 55
	0x00, REPEAT(9), 0x02, 0x00, 0x00, 0x01, 0x00, REPEAT(7), 0x1f, 0x1f, // Column 56
	0x00, REPEAT(21), 0x0f, 0x0b, // Column 57
	0x00, REPEAT(18), 0x14, 0x1c, 0x00, 0x09, 0x0a, // Column 58
	0x00, REPEAT(18), 0x15, 0x1d, 0x04, 0x0c, 0x1f, // Column 59
	0x00, 0x00, 0x03, 0x00, REPEAT(8), 0x02, 0x00, 0x03, 0x00, REPEAT(3), 0x15, 0x1d, 0x05, 0x0d, 0x1f, // Column 60
	0x00, REPEAT(18), 0x15, 0x1d, 0x00, 0x00, 0x1f, // Column 61
	REPEAT(1),
	0x00, 0x01, 0x00, REPEAT(4), 0x01, 0x00, REPEAT(10), 0x15, 0x1d, 0x00, 0x00, 0x09, // Column 63
	0x00, REPEAT(13), 0x01, 0x00, REPEAT(3), 0x15, 0x1d, 0x00, 0x00, 0x00, // Column 64
	0x00, REPEAT(18), 0x15, 0x1d, 0x04, 0x0c, 0x04, // Column 65
	0x00, REPEAT(18), 0x15, 0x1d, 0x05, 0x0d, 0x05, // Column 66
	0x00, REPEAT(5), 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, REPEAT(7), 0x16, 0x1e, 0x00, 0x00, 0x00, // Column 67
	0x00, 0x00, 0x02, 0x00, REPEAT(20), // Column 68
	0x00, REPEAT(22), 0x08, // Column 69
	0x00, REPEAT(22), 0x1f, // Column 70
	0x00, REPEAT(5), 0x01, 0x00, REPEAT(14), 0x08, 0x1f, // Column 71
	0x00, REPEAT(15), 0x03, 0x00, REPEAT(4), 0x1f, 0x1f, // Column 72
	0x00, REPEAT(8), 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, REPEAT(6), 0x08, 0x1f, 0x1f, // Column 73
	0x00, 0x00, 0x03, 0x00, REPEAT(5), 0x02, 0x00, REPEAT(10), 0x1f, 0x1f, 0x0f, // Column 74
	0x00, REPEAT(19), 0x0e, 0x1f, 0x1f, 0x1f, // Column 75
	0x00, REPEAT(19), 0x1f, REPEAT(3), // Column 76
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, REPEAT(8), 0x01, 0x00, 0x00, 0x00, 0x1f, REPEAT(3), // Column 77
	0x00, REPEAT(19), 0x09, 0x17, 0x17, 0x0b, // Column 78
	0x00, REPEAT(10), 0x01, 0x00, REPEAT(8), 0x1f, 0x0f, 0x17, // Column 79
	0x00, REPEAT(20), 0x0f, 0x1f, 0x17, // Column 80
	0x00, REPEAT(8), 0x03, 0x00, REPEAT(11), 0x1f, 0x00, // Column 81
	0x18, 0x00, 0x10, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, REPEAT(13), 0x1f, 0x00, // Column 82
	0x19, 0x00, 0x11, 0x19, 0x00, REPEAT(4), 0x03, 0x00, REPEAT(11), 0x1f, 0x00, // Column 83
	0x1a, 0x00, 0x11, 0x1a, 0x00, REPEAT(17), 0x1f, 0x00, // Column 84
	0x1a, 0x0c, 0x12, 0x1a, 0x04, 0x06, 0x00, REPEAT(5), 0x01, 0x00, REPEAT(8), 0x09, 0x17, // Column 85
	0x19, 0x0d, 0x11, 0x19, 0x05, 0x07, 0x00, REPEAT(9), 0x01, 0x00, REPEAT(6), // Column 86
	0x19, 0x00, 0x11, 0x19, 0x00, REPEAT(19), // Column 87
	0x19, 0x00, 0x12, 0x19, 0x00, REPEAT(5), 0x02, 0x00, 0x01, 0x00, REPEAT(10), // Column 88
	0x1b, 0x00, 0x13, 0x1b, 0x00, REPEAT(9), 0x03, 0x00, REPEAT(4), 0x03, 0x00, 0x00, 0x00, // Column 89
	0x00, REPEAT(3), 0x01, 0x00, REPEAT(18), // Column 90
	0x00, REPEAT(16), 0x02, 0x00, REPEAT(5), // Column 91
	0x00, 0x10, 0x18, 0x00, 0x10, 0x18, 0x00, REPEAT(3), 0x02, 0x00, 0x00, 0x02, 0x00, REPEAT(9), // Column 92
	0x00, 0x11, 0x19, 0x00, 0x11, 0x19, 0x00, REPEAT(17), // Column 93
	0x00, 0x11, 0x1a, 0x00, 0x11, 0x1a, 0x00, REPEAT(8), 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, REPEAT(3), // Column 94
	0x0c, 0x12, 0x1a, 0x0c, 0x12, 0x1a, 0x04, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, REPEAT(11), // Column 95
	0x0d, 0x11, 0x19, 0x0d, 0x11, 0x19, 0x05, 0x07, 0x00, REPEAT(15), // Column 96
	0x00, 0x11, 0x19, 0x00, 0x11, 0x19, 0x00, REPEAT(17), // Column 97
	0x00, 0x12, 0x19, 0x00, 0x12, 0x19, 0x00, REPEAT(9), 0x02, 0x00, REPEAT(6), // Column 98
	0x00, 0x13, 0x1b, 0x00, 0x13, 0x1b, 0x00, REPEAT(15), 0x02, 0x00, // Column 99
	0x00, REPEAT(9), 0x01, 0x00, REPEAT(7), 0x03, 0x00, REPEAT(3), // Column 100
	0x00, REPEAT(18), 0x03, 0x00, REPEAT(3), // Column 101
	0x00, REPEAT(23), // Column 102
	0x00, REPEAT(15), 0x01, 0x00, REPEAT(6), // Column 103
	0x00, 0x00, 0x01, 0x00, REPEAT(20), // Column 104
	0x00, REPEAT(3), 0x01, 0x00, REPEAT(18), // Column 105
	0x00, REPEAT(4), 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, REPEAT(13), // Column 106
	0x00, REPEAT(14), 0x02, 0x00, REPEAT(3), 0x01, 0x00, 0x00, 0x00, // Column 107
	0x00, 0x00, 0x00, 0x03, 0x00, REPEAT(6), 0x01, 0x00, REPEAT(11), // Column 108
	0x00, REPEAT(23), // Column 109
	0x1c, 0x00, REPEAT(16), 0x02, 0x00, REPEAT(3), 0x14, // Column 110
	0x1d, 0x00, REPEAT(7), 0x02, 0x00, 0x03, 0x00, 0x01, 0x00, REPEAT(8), 0x15, // Column 111
	0x1d, 0x00, 0x00, 0x00, 0x01, 0x00, REPEAT(17), 0x15, // Column 112
	0x1d, 0x00, REPEAT(21), 0x15, // Column 113
	REPEAT(1),
	0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, REPEAT(3), 0x01, 0x00, REPEAT(12), 0x15, // Column 115
	0x1d, 0x00, REPEAT(12), 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, REPEAT(3), 0x15, // Column 116
	0x1d, 0x00, REPEAT(3), 0x01, 0x00, REPEAT(16), 0x15, // Column 117
	0x1d, 0x00, REPEAT(3), 0x02, 0x00, REPEAT(16), 0x15, // Column 118
	0x1d, 0x00, REPEAT(11), 0x03, 0x00, REPEAT(8), 0x15, // Column 119
	0x1d, 0x00, REPEAT(6), 0x02, 0x00, REPEAT(4), 0x02, 0x00, REPEAT(3), 0x02, 0x00, 0x00, 0x00, 0x15, // Column 120
	0x1d, 0x00, REPEAT(4), 0x01, 0x00, REPEAT(15), 0x15, // Column 121
	0x1d, 0x00, 0x2c, 0x00, REPEAT(19), 0x15, // Column 122
	0x1d, 0x00, 0x2d, 0x00, REPEAT(6), 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, REPEAT(7), 0x15, // Column 123
	0x1d, 0x00, 0x2e, 0x00, REPEAT(3), 0x03, 0x00, 0x00, 0x01, 0x00, REPEAT(4), 0x01, 0x00, REPEAT(3), 0x24, 0x00, 0x15, // Column 124
	0x1d, 0x24, 0x2d, 0x00, 0x00, 0x02, 0x00, REPEAT(14), 0x25, 0x00, 0x15, // Column 125
	0x1d, 0x25, 0x2e, 0x24, 0x00, REPEAT(16), 0x26, 0x00, 0x15, // Column 126
	0x1d, 0x26, 0x2d, 0x25, 0x00, REPEAT(3), 0x2c, 0x00, REPEAT(10), 0x24, 0x25, 0x00, 0x15, // Column 127
	0x1d, 0x25, 0x2e, 0x26, 0x00, REPEAT(3), 0x2d, 0x00, REPEAT(5), 0x24, 0x00, 0x02, 0x00, 0x00, 0x25, 0x26, 0x00, 0x15, // Column 128
	0x1d, 0x26, 0x2d, 0x25, 0x00, 0x01, 0x00, 0x00, 0x2e, 0x00, REPEAT(4), 0x2c, 0x25, 0x00, REPEAT(3), 0x26, 0x25, 0x00, 0x15, // Column 129
	0x1d, 0x25, 0x2e, 0x26, 0x00, REPEAT(3), 0x2d, 0x24, 0x00, REPEAT(3), 0x2d, 0x26, 0x00, REPEAT(3), 0x25, 0x26, 0x2c, 0x15, // Column 130
	0x1d, 0x26, 0x2d, 0x25, 0x00, REPEAT(3), 0x2e, 0x25, 0x00, REPEAT(3), 0x2e, 0x25, 0x00, REPEAT(3), 0x26, 0x25, 0x2d, 0x15, // Column 131
	0x1d, 0x25, 0x2e, 0x26, 0x00, REPEAT(3), 0x2d, 0x26, 0x00, REPEAT(3), 0x2d, 0x26, 0x00, REPEAT(3), 0x25, 0x26, 0x2e, 0x15, // Column 132
	0x1d, 0x26, 0x2d, 0x25, 0x00, REPEAT(3), 0x2e, 0x25, 0x20, 0x28, 0x30, 0x38, 0x2e, 0x25, 0x00, REPEAT(3), 0x26, 0x25, 0x2d, 0x15, // Column 133
	0x1d, 0x25, 0x2e, 0x26, 0x21, 0x22, 0x2a, 0x39, 0x2f, 0x27, 0x3d, 0x29, 0x31, 0x35, 0x2f, 0x27, 0x21, 0x22, 0x2a, 0x39, 0x25, 0x26, 0x2e, 0x15, // Column 134
	0x1d, 0x27, 0x2f, 0x27, 0x3e, 0x23, 0x2b, 0x35, 0x35, 0x36, 0x3e, 0x37, 0x35, 0x3d, 0x37, 0x35, 0x3e, 0x23, 0x2b, 0x35, 0x27, 0x27, 0x2f, 0x15, // Column 135
	0x1d, 0x3d, 0x3f, 0x35, 0x3f, 0x35, 0x3d, 0x37, 0x37, 0x35, 0x35, 0x3d, 0x36, 0x3e, 0x35, 0x3d, 0x3f, 0x35, 0x3d, 0x37, 0x35, 0x3d, 0x3f, 0x15, // Column 136
	0x00, REPEAT(23), // Column 137
	REPEAT(75),
	0xffffffff, REPEAT(23), // Column 213
	0xff, 0xff // Terminator
};

// STATISTICS:
// Original map size   = 13224 bytes
// Compressed map size = 1362 bytes
// Compression ratio   = 10%

